<?xml version="1.0"?>
<ruleset name="Theorem">

	<file>./src</file>
	<file>./tests</file>

	<exclude-pattern>*/bin/*</exclude-pattern>
	<exclude-pattern>*/cache/*</exclude-pattern>
	<exclude-pattern>*/tmp/*</exclude-pattern>
	<exclude-pattern>*/temp/*</exclude-pattern>

	<arg name="basepath" value="."/>
	<arg name="colors"/>
	<arg name="parallel" value="75"/>
	<arg name="tab-width" value="4"/>

	<arg value="pv"/>

	<!-- Don't hide tokenizer exceptions -->
	<rule ref="Internal.Tokenizer.Exception">
		<type>error</type>
	</rule>

	<!-- PSR-12 -->
	<rule ref="PSR12">

		<!-- Exclude tab rules because PSR-12 is wrong. -->
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<exclude name="Generic.WhiteSpace.ScopeIndent"/>

	</rule>

	<!-- Additional rules -->
	<rule ref="Generic.Arrays.ArrayIndent"/>
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>

	<rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Squiz.Classes.ClassDeclaration"/>
	<rule ref="Squiz.Classes.ClassFileName"/>
	<rule ref="Squiz.Classes.LowercaseClassKeywords"/>
	<rule ref="Squiz.Classes.SelfMemberReference"/>
	<rule ref="Squiz.Classes.ValidClassName"/>

	<rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement"/>
	<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

	<rule ref="Generic.Commenting.DocComment"/>
	<rule ref="Generic.Commenting.Fixme"/>
	<rule ref="Generic.Commenting.Todo"/>
	<rule ref="Squiz.Commenting.BlockComment"/>
	<rule ref="Squiz.Commenting.ClassComment"/>
	<rule ref="Squiz.Commenting.DocCommentAlignment"/>
	<rule ref="Squiz.Commenting.EmptyCatchComment"/>
	<rule ref="Squiz.Commenting.FileComment"/>
	<rule ref="Squiz.Commenting.FunctionComment"/>
	<rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>
	<rule ref="Squiz.Commenting.InlineComment"/>

	<rule ref="Generic.ControlStructures.InlineControlStructure"/>
	<rule ref="Squiz.ControlStructures.ControlSignature">
		<properties>
			<property name="requiredSpacesBeforeColon" value="0"/>
		</properties>
	</rule>
	<rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
	<rule ref="Squiz.ControlStructures.InlineIfDeclaration"/>
	<rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
	<rule ref="Squiz.ControlStructures.SwitchDeclaration"/>

	<rule ref="Generic.Files.ByteOrderMark"/>
	<rule ref="Generic.Files.EndFileNewline"/>
	<rule ref="Generic.Files.ExecutableFile"/>
	<rule ref="Generic.Files.InlineHTML"/>
	<rule ref="Generic.Files.LineEndings"/>
	<rule ref="Generic.Files.LineLength">
		<properties>
			<property name="lineLimit" value="120"/>
			<property name="absoluteLineLimit" value="0"/>
		</properties>
	</rule>
	<rule ref="Generic.Files.OneObjectStructurePerFile"/>

	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
	<rule ref="Generic.Formatting.MultipleStatementAlignment"/>
	<rule ref="Generic.Formatting.NoSpaceAfterCast"/>

	<rule ref="Generic.Functions.CallTimePassByReference"/>
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>

	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing"/>
	<rule ref="Squiz.Functions.FunctionDeclaration"/>
	<rule ref="Squiz.Functions.FunctionDuplicateArgument"/>
	<rule ref="Squiz.Functions.GlobalFunction"/>
	<rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
	<rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>

	<rule ref="Generic.NamingConventions.AbstractClassNamePrefix"/>
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="Generic.NamingConventions.InterfaceNameSuffix"/>
	<rule ref="Generic.NamingConventions.TraitNameSuffix"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
	<rule ref="Squiz.NamingConventions.ValidFunctionName"/>
	<rule ref="Squiz.NamingConventions.ValidVariableName"/>

	<rule ref="Squiz.Objects.ObjectInstantiation"/>

	<rule ref="Squiz.Operators.ComparisonOperatorUsage"/>
	<rule ref="Squiz.Operators.IncrementDecrementUsage"/>
	<rule ref="Squiz.Operators.ValidLogicalOperators"/>

	<rule ref="Generic.PHP.BacktickOperator"/>
	<rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Generic.PHP.DisallowAlternativePHPTags"/>
	<rule ref="Generic.PHP.DisallowRequestSuperglobal"/>
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.DiscourageGoto"/>
	<rule ref="Generic.PHP.ForbiddenFunctions"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>
	<rule ref="Generic.PHP.LowerCaseKeyword"/>
	<rule ref="Generic.PHP.LowerCaseType"/>
	<rule ref="Generic.PHP.NoSilencedErrors"/>
	<rule ref="Generic.PHP.RequireStrictTypes"/>
	<rule ref="Generic.PHP.SAPIUsage"/>
	<rule ref="Generic.PHP.Syntax"/>
	<rule ref="Squiz.PHP.CommentedOutCode"/>
	<rule ref="Squiz.PHP.DisallowInlineIf"/>
	<rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
	<rule ref="Squiz.PHP.DiscouragedFunctions"/>
	<rule ref="Squiz.PHP.EmbeddedPhp"/>
	<rule ref="Squiz.PHP.Eval"/>
	<rule ref="Squiz.PHP.GlobalKeyword"/>
	<rule ref="Squiz.PHP.LowercasePHPFunctions"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>

	<rule ref="Squiz.Scope.MemberVarScope"/>
	<rule ref="Squiz.Scope.MethodScope"/>
	<rule ref="Squiz.Scope.StaticThisUsage"/>

	<rule ref="Generic.Strings.UnnecessaryStringConcat"/>
	<rule ref="Squiz.Strings.ConcatenationSpacing">
		<properties>
			<property name="spacing" value="1"/>
		</properties>
	</rule>
	<rule ref="Squiz.Strings.EchoedStrings"/>

	<rule ref="Generic.VersionControl.GitMergeConflict"/>
	<rule ref="Generic.VersionControl.SubversionProperties"/>

	<rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
	<rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="tabIndent" value="true"/>
		</properties>
	</rule>
	<rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter"/>
	<rule ref="Squiz.WhiteSpace.CastSpacing"/>
	<rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
	<rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
	<rule ref="Squiz.WhiteSpace.FunctionSpacing">
		<properties>
			<property name="spacing" value="1"/>
			<property name="spacingBeforeFirst" value="0"/>
			<property name="spacingAfterLast" value="0"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
	<rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="true"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
	<rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

</ruleset>
